// Code generated by protoc-gen-go. DO NOT EDIT.
// source: finance.proto

package financego

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaymentProcessor int32

const (
	PaymentProcessor_UNKNOWN_PROCESSOR PaymentProcessor = 0
	PaymentProcessor_STRIPE            PaymentProcessor = 1
)

var PaymentProcessor_name = map[int32]string{
	0: "UNKNOWN_PROCESSOR",
	1: "STRIPE",
}

var PaymentProcessor_value = map[string]int32{
	"UNKNOWN_PROCESSOR": 0,
	"STRIPE":            1,
}

func (x PaymentProcessor) String() string {
	return proto.EnumName(PaymentProcessor_name, int32(x))
}

func (PaymentProcessor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{0}
}

type Service_Interval int32

const (
	Service_UNKNOWN_INTERVAL Service_Interval = 0
	Service_DAILY            Service_Interval = 1
	Service_WEEKLY           Service_Interval = 2
	Service_MONTHLY          Service_Interval = 3
	Service_QUARTERLY        Service_Interval = 4
	Service_YEARLY           Service_Interval = 5
)

var Service_Interval_name = map[int32]string{
	0: "UNKNOWN_INTERVAL",
	1: "DAILY",
	2: "WEEKLY",
	3: "MONTHLY",
	4: "QUARTERLY",
	5: "YEARLY",
}

var Service_Interval_value = map[string]int32{
	"UNKNOWN_INTERVAL": 0,
	"DAILY":            1,
	"WEEKLY":           2,
	"MONTHLY":          3,
	"QUARTERLY":        4,
	"YEARLY":           5,
}

func (x Service_Interval) String() string {
	return proto.EnumName(Service_Interval_name, int32(x))
}

func (Service_Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{7, 0}
}

type Service_Mode int32

const (
	Service_UNKNOWN_MODE            Service_Mode = 0
	Service_FIXED_AMOUNT            Service_Mode = 1
	Service_METERED_SUM_USAGE       Service_Mode = 2
	Service_METERED_MAX_USAGE       Service_Mode = 3
	Service_METERED_LAST_USAGE      Service_Mode = 4
	Service_METERED_LAST_USAGE_EVER Service_Mode = 5
)

var Service_Mode_name = map[int32]string{
	0: "UNKNOWN_MODE",
	1: "FIXED_AMOUNT",
	2: "METERED_SUM_USAGE",
	3: "METERED_MAX_USAGE",
	4: "METERED_LAST_USAGE",
	5: "METERED_LAST_USAGE_EVER",
}

var Service_Mode_value = map[string]int32{
	"UNKNOWN_MODE":            0,
	"FIXED_AMOUNT":            1,
	"METERED_SUM_USAGE":       2,
	"METERED_MAX_USAGE":       3,
	"METERED_LAST_USAGE":      4,
	"METERED_LAST_USAGE_EVER": 5,
}

func (x Service_Mode) String() string {
	return proto.EnumName(Service_Mode_name, int32(x))
}

func (Service_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{7, 1}
}

type Charge struct {
	MerchantAlias        string           `protobuf:"bytes,1,opt,name=merchant_alias,json=merchantAlias,proto3" json:"merchant_alias,omitempty"`
	CustomerAlias        string           `protobuf:"bytes,2,opt,name=customer_alias,json=customerAlias,proto3" json:"customer_alias,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	CustomerId           string           `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId            string           `protobuf:"bytes,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	ChargeId             string           `protobuf:"bytes,6,opt,name=charge_id,json=chargeId,proto3" json:"charge_id,omitempty"`
	Amount               int64            `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	InvoiceId            string           `protobuf:"bytes,8,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	ReceiptUrl           string           `protobuf:"bytes,9,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
	ProductId            string           `protobuf:"bytes,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanId               string           `protobuf:"bytes,11,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Country              string           `protobuf:"bytes,12,opt,name=country,proto3" json:"country,omitempty"`
	Currency             string           `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`
	Description          string           `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Charge) Reset()         { *m = Charge{} }
func (m *Charge) String() string { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()    {}
func (*Charge) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{0}
}

func (m *Charge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charge.Unmarshal(m, b)
}
func (m *Charge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charge.Marshal(b, m, deterministic)
}
func (m *Charge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charge.Merge(m, src)
}
func (m *Charge) XXX_Size() int {
	return xxx_messageInfo_Charge.Size(m)
}
func (m *Charge) XXX_DiscardUnknown() {
	xxx_messageInfo_Charge.DiscardUnknown(m)
}

var xxx_messageInfo_Charge proto.InternalMessageInfo

func (m *Charge) GetMerchantAlias() string {
	if m != nil {
		return m.MerchantAlias
	}
	return ""
}

func (m *Charge) GetCustomerAlias() string {
	if m != nil {
		return m.CustomerAlias
	}
	return ""
}

func (m *Charge) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *Charge) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Charge) GetPaymentId() string {
	if m != nil {
		return m.PaymentId
	}
	return ""
}

func (m *Charge) GetChargeId() string {
	if m != nil {
		return m.ChargeId
	}
	return ""
}

func (m *Charge) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Charge) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

func (m *Charge) GetReceiptUrl() string {
	if m != nil {
		return m.ReceiptUrl
	}
	return ""
}

func (m *Charge) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Charge) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Charge) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Charge) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Charge) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Invoice struct {
	MerchantAlias        string           `protobuf:"bytes,1,opt,name=merchant_alias,json=merchantAlias,proto3" json:"merchant_alias,omitempty"`
	CustomerAlias        string           `protobuf:"bytes,2,opt,name=customer_alias,json=customerAlias,proto3" json:"customer_alias,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	CustomerId           string           `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId            string           `protobuf:"bytes,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	InvoiceId            string           `protobuf:"bytes,6,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	InvoiceUrl           string           `protobuf:"bytes,7,opt,name=invoice_url,json=invoiceUrl,proto3" json:"invoice_url,omitempty"`
	ProductId            string           `protobuf:"bytes,8,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanId               string           `protobuf:"bytes,9,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Country              string           `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Currency             string           `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	Number               string           `protobuf:"bytes,12,opt,name=number,proto3" json:"number,omitempty"`
	AmountDue            int64            `protobuf:"varint,13,opt,name=amount_due,json=amountDue,proto3" json:"amount_due,omitempty"`
	AmountPaid           int64            `protobuf:"varint,14,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`
	AmountRemaining      int64            `protobuf:"varint,15,opt,name=amount_remaining,json=amountRemaining,proto3" json:"amount_remaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{1}
}

func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (m *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(m, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetMerchantAlias() string {
	if m != nil {
		return m.MerchantAlias
	}
	return ""
}

func (m *Invoice) GetCustomerAlias() string {
	if m != nil {
		return m.CustomerAlias
	}
	return ""
}

func (m *Invoice) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *Invoice) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Invoice) GetPaymentId() string {
	if m != nil {
		return m.PaymentId
	}
	return ""
}

func (m *Invoice) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

func (m *Invoice) GetInvoiceUrl() string {
	if m != nil {
		return m.InvoiceUrl
	}
	return ""
}

func (m *Invoice) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Invoice) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Invoice) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Invoice) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Invoice) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Invoice) GetAmountDue() int64 {
	if m != nil {
		return m.AmountDue
	}
	return 0
}

func (m *Invoice) GetAmountPaid() int64 {
	if m != nil {
		return m.AmountPaid
	}
	return 0
}

func (m *Invoice) GetAmountRemaining() int64 {
	if m != nil {
		return m.AmountRemaining
	}
	return 0
}

type Registration struct {
	MerchantAlias        string           `protobuf:"bytes,1,opt,name=merchant_alias,json=merchantAlias,proto3" json:"merchant_alias,omitempty"`
	CustomerAlias        string           `protobuf:"bytes,2,opt,name=customer_alias,json=customerAlias,proto3" json:"customer_alias,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	CustomerId           string           `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId            string           `protobuf:"bytes,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Registration) Reset()         { *m = Registration{} }
func (m *Registration) String() string { return proto.CompactTextString(m) }
func (*Registration) ProtoMessage()    {}
func (*Registration) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{2}
}

func (m *Registration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Registration.Unmarshal(m, b)
}
func (m *Registration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Registration.Marshal(b, m, deterministic)
}
func (m *Registration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Registration.Merge(m, src)
}
func (m *Registration) XXX_Size() int {
	return xxx_messageInfo_Registration.Size(m)
}
func (m *Registration) XXX_DiscardUnknown() {
	xxx_messageInfo_Registration.DiscardUnknown(m)
}

var xxx_messageInfo_Registration proto.InternalMessageInfo

func (m *Registration) GetMerchantAlias() string {
	if m != nil {
		return m.MerchantAlias
	}
	return ""
}

func (m *Registration) GetCustomerAlias() string {
	if m != nil {
		return m.CustomerAlias
	}
	return ""
}

func (m *Registration) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *Registration) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Registration) GetPaymentId() string {
	if m != nil {
		return m.PaymentId
	}
	return ""
}

type Subscription struct {
	MerchantAlias        string           `protobuf:"bytes,1,opt,name=merchant_alias,json=merchantAlias,proto3" json:"merchant_alias,omitempty"`
	CustomerAlias        string           `protobuf:"bytes,2,opt,name=customer_alias,json=customerAlias,proto3" json:"customer_alias,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	CustomerId           string           `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId            string           `protobuf:"bytes,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	ProductId            string           `protobuf:"bytes,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanId               string           `protobuf:"bytes,7,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	SubscriptionId       string           `protobuf:"bytes,8,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	SubscriptionItemId   string           `protobuf:"bytes,9,opt,name=subscription_item_id,json=subscriptionItemId,proto3" json:"subscription_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{3}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetMerchantAlias() string {
	if m != nil {
		return m.MerchantAlias
	}
	return ""
}

func (m *Subscription) GetCustomerAlias() string {
	if m != nil {
		return m.CustomerAlias
	}
	return ""
}

func (m *Subscription) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *Subscription) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Subscription) GetPaymentId() string {
	if m != nil {
		return m.PaymentId
	}
	return ""
}

func (m *Subscription) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Subscription) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Subscription) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *Subscription) GetSubscriptionItemId() string {
	if m != nil {
		return m.SubscriptionItemId
	}
	return ""
}

type UsageRecord struct {
	MerchantAlias        string           `protobuf:"bytes,1,opt,name=merchant_alias,json=merchantAlias,proto3" json:"merchant_alias,omitempty"`
	CustomerAlias        string           `protobuf:"bytes,2,opt,name=customer_alias,json=customerAlias,proto3" json:"customer_alias,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	SubscriptionId       string           `protobuf:"bytes,4,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	UsageRecordId        string           `protobuf:"bytes,5,opt,name=usage_record_id,json=usageRecordId,proto3" json:"usage_record_id,omitempty"`
	Quantity             int64            `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	SubscriptionItemId   string           `protobuf:"bytes,7,opt,name=subscription_item_id,json=subscriptionItemId,proto3" json:"subscription_item_id,omitempty"`
	ProductId            string           `protobuf:"bytes,8,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanId               string           `protobuf:"bytes,9,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UsageRecord) Reset()         { *m = UsageRecord{} }
func (m *UsageRecord) String() string { return proto.CompactTextString(m) }
func (*UsageRecord) ProtoMessage()    {}
func (*UsageRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{4}
}

func (m *UsageRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageRecord.Unmarshal(m, b)
}
func (m *UsageRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageRecord.Marshal(b, m, deterministic)
}
func (m *UsageRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageRecord.Merge(m, src)
}
func (m *UsageRecord) XXX_Size() int {
	return xxx_messageInfo_UsageRecord.Size(m)
}
func (m *UsageRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageRecord.DiscardUnknown(m)
}

var xxx_messageInfo_UsageRecord proto.InternalMessageInfo

func (m *UsageRecord) GetMerchantAlias() string {
	if m != nil {
		return m.MerchantAlias
	}
	return ""
}

func (m *UsageRecord) GetCustomerAlias() string {
	if m != nil {
		return m.CustomerAlias
	}
	return ""
}

func (m *UsageRecord) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *UsageRecord) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *UsageRecord) GetUsageRecordId() string {
	if m != nil {
		return m.UsageRecordId
	}
	return ""
}

func (m *UsageRecord) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *UsageRecord) GetSubscriptionItemId() string {
	if m != nil {
		return m.SubscriptionItemId
	}
	return ""
}

func (m *UsageRecord) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *UsageRecord) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

type Merchant struct {
	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	// The domain name of the merchant
	// Eg. space.aletheiaware.com
	Domain               string           `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Processor            PaymentProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=finance.PaymentProcessor" json:"processor,omitempty"`
	PublishableKey       string           `protobuf:"bytes,4,opt,name=publishable_key,json=publishableKey,proto3" json:"publishable_key,omitempty"`
	RegisterUrl          string           `protobuf:"bytes,5,opt,name=register_url,json=registerUrl,proto3" json:"register_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{5}
}

func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (m *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(m, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Merchant) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Merchant) GetProcessor() PaymentProcessor {
	if m != nil {
		return m.Processor
	}
	return PaymentProcessor_UNKNOWN_PROCESSOR
}

func (m *Merchant) GetPublishableKey() string {
	if m != nil {
		return m.PublishableKey
	}
	return ""
}

func (m *Merchant) GetRegisterUrl() string {
	if m != nil {
		return m.RegisterUrl
	}
	return ""
}

type Product struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Currency             string   `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	UnitPrice            int64    `protobuf:"varint,4,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	PurchaseUrl          string   `protobuf:"bytes,5,opt,name=purchase_url,json=purchaseUrl,proto3" json:"purchase_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{6}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Product) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Product) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Product) GetUnitPrice() int64 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *Product) GetPurchaseUrl() string {
	if m != nil {
		return m.PurchaseUrl
	}
	return ""
}

type Service struct {
	ProductId            string           `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanId               string           `protobuf:"bytes,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Country              string           `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Currency             string           `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	GroupPrice           int64            `protobuf:"varint,5,opt,name=group_price,json=groupPrice,proto3" json:"group_price,omitempty"`
	GroupSize            int64            `protobuf:"varint,6,opt,name=group_size,json=groupSize,proto3" json:"group_size,omitempty"`
	Interval             Service_Interval `protobuf:"varint,7,opt,name=interval,proto3,enum=finance.Service_Interval" json:"interval,omitempty"`
	Mode                 Service_Mode     `protobuf:"varint,8,opt,name=mode,proto3,enum=finance.Service_Mode" json:"mode,omitempty"`
	SubscribeUrl         string           `protobuf:"bytes,9,opt,name=subscribe_url,json=subscribeUrl,proto3" json:"subscribe_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{7}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Service) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *Service) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Service) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Service) GetGroupPrice() int64 {
	if m != nil {
		return m.GroupPrice
	}
	return 0
}

func (m *Service) GetGroupSize() int64 {
	if m != nil {
		return m.GroupSize
	}
	return 0
}

func (m *Service) GetInterval() Service_Interval {
	if m != nil {
		return m.Interval
	}
	return Service_UNKNOWN_INTERVAL
}

func (m *Service) GetMode() Service_Mode {
	if m != nil {
		return m.Mode
	}
	return Service_UNKNOWN_MODE
}

func (m *Service) GetSubscribeUrl() string {
	if m != nil {
		return m.SubscribeUrl
	}
	return ""
}

func init() {
	proto.RegisterEnum("finance.PaymentProcessor", PaymentProcessor_name, PaymentProcessor_value)
	proto.RegisterEnum("finance.Service_Interval", Service_Interval_name, Service_Interval_value)
	proto.RegisterEnum("finance.Service_Mode", Service_Mode_name, Service_Mode_value)
	proto.RegisterType((*Charge)(nil), "finance.Charge")
	proto.RegisterType((*Invoice)(nil), "finance.Invoice")
	proto.RegisterType((*Registration)(nil), "finance.Registration")
	proto.RegisterType((*Subscription)(nil), "finance.Subscription")
	proto.RegisterType((*UsageRecord)(nil), "finance.UsageRecord")
	proto.RegisterType((*Merchant)(nil), "finance.Merchant")
	proto.RegisterType((*Product)(nil), "finance.Product")
	proto.RegisterType((*Service)(nil), "finance.Service")
}

func init() { proto.RegisterFile("finance.proto", fileDescriptor_c04e2e1c1ba79a81) }

var fileDescriptor_c04e2e1c1ba79a81 = []byte{
	// 1007 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0x5d, 0x8e, 0xdb, 0x54,
	0x14, 0xae, 0xe3, 0x24, 0x8e, 0x4f, 0x92, 0x19, 0x73, 0x35, 0x9d, 0x9a, 0x56, 0xa3, 0x0e, 0x41,
	0xc0, 0x94, 0x87, 0x01, 0x15, 0x55, 0x3c, 0xa7, 0x8d, 0x0b, 0xd6, 0xe4, 0x0f, 0x27, 0x69, 0x3b,
	0xbc, 0x58, 0x8e, 0x7d, 0xc9, 0x5c, 0x11, 0xff, 0x70, 0x6d, 0x0f, 0x4a, 0xdf, 0x58, 0x00, 0x7b,
	0x60, 0x07, 0xac, 0x80, 0x5d, 0xc0, 0x1e, 0x90, 0xd8, 0x04, 0xba, 0x3f, 0x4e, 0x9c, 0xcc, 0xa4,
	0x48, 0xf0, 0x82, 0xe6, 0x2d, 0xe7, 0x3b, 0xdf, 0xbd, 0xf9, 0xce, 0x77, 0x8e, 0x8f, 0x0d, 0xed,
	0xef, 0x48, 0xe4, 0x45, 0x3e, 0x3e, 0x4f, 0x68, 0x9c, 0xc5, 0x48, 0x93, 0x61, 0xe7, 0x77, 0x15,
	0xea, 0x2f, 0xae, 0x3c, 0xba, 0xc0, 0xe8, 0x23, 0x38, 0x08, 0x31, 0xf5, 0xaf, 0xbc, 0x28, 0x73,
	0xbd, 0x25, 0xf1, 0x52, 0x53, 0x39, 0x55, 0xce, 0x74, 0xa7, 0x5d, 0xa0, 0x5d, 0x06, 0x32, 0x9a,
	0x9f, 0xa7, 0x59, 0x1c, 0x62, 0x2a, 0x69, 0x15, 0x41, 0x2b, 0x50, 0x41, 0xfb, 0x12, 0xf4, 0x84,
	0xc6, 0x3e, 0x4e, 0xd3, 0x98, 0x9a, 0xea, 0xa9, 0x72, 0x76, 0xf0, 0xf4, 0xfd, 0xf3, 0x42, 0xc4,
	0xd8, 0x5b, 0x85, 0x38, 0xca, 0xc6, 0x05, 0xc1, 0xd9, 0x70, 0xd1, 0x63, 0x68, 0xae, 0xef, 0x27,
	0x81, 0x59, 0xe5, 0x97, 0x43, 0x01, 0xd9, 0x01, 0x3a, 0x01, 0x48, 0xc4, 0x79, 0x96, 0xaf, 0xf1,
	0xbc, 0x2e, 0x11, 0x3b, 0x40, 0x8f, 0x40, 0xf7, 0x79, 0x41, 0x2c, 0x5b, 0xe7, 0xd9, 0x86, 0x00,
	0xec, 0x00, 0x1d, 0x43, 0xdd, 0x0b, 0xe3, 0x3c, 0xca, 0x4c, 0xed, 0x54, 0x39, 0x53, 0x1d, 0x19,
	0xb1, 0x3b, 0x49, 0x74, 0x1d, 0x13, 0x9f, 0x9f, 0x6a, 0x88, 0x3b, 0x25, 0x62, 0x07, 0x4c, 0x13,
	0xc5, 0x3e, 0x26, 0x49, 0xe6, 0xe6, 0x74, 0x69, 0xea, 0x42, 0x93, 0x84, 0x66, 0x74, 0xc9, 0x35,
	0xd1, 0x38, 0xc8, 0x7d, 0xae, 0x09, 0xa4, 0x26, 0x81, 0xd8, 0x01, 0x7a, 0x00, 0x5a, 0xb2, 0xf4,
	0x22, 0x96, 0x6b, 0xf2, 0x5c, 0x9d, 0x85, 0x76, 0x80, 0x4c, 0xd0, 0x7c, 0x26, 0x80, 0xae, 0xcc,
	0x16, 0x4f, 0x14, 0x21, 0x7a, 0x08, 0x0d, 0x3f, 0xa7, 0x14, 0x47, 0xfe, 0xca, 0x6c, 0xcb, 0x2a,
	0x64, 0x8c, 0x4e, 0xa1, 0x19, 0xe0, 0xd4, 0xa7, 0x24, 0xc9, 0x48, 0x1c, 0x99, 0x07, 0x3c, 0x5d,
	0x86, 0x3a, 0x3f, 0x55, 0x41, 0xb3, 0x85, 0xfc, 0xbb, 0xd2, 0xd7, 0xed, 0x16, 0xd5, 0x6f, 0x69,
	0x51, 0x91, 0x66, 0x2d, 0xd2, 0xc4, 0xf5, 0x12, 0xba, 0xd9, 0xa2, 0xc6, 0x3b, 0x5a, 0xa4, 0xef,
	0x6b, 0x11, 0xec, 0x6f, 0x51, 0x73, 0xa7, 0x45, 0xc7, 0x50, 0x8f, 0xf2, 0x70, 0x8e, 0xa9, 0xec,
	0xab, 0x8c, 0x98, 0x0a, 0x31, 0x72, 0x6e, 0x90, 0x63, 0xde, 0x58, 0xd5, 0xd1, 0x05, 0xd2, 0xcb,
	0x31, 0xab, 0x42, 0xa6, 0x13, 0x8f, 0x04, 0xbc, 0xb3, 0xaa, 0x23, 0x4f, 0x8c, 0x3d, 0x12, 0xa0,
	0x27, 0x60, 0x48, 0x02, 0xc5, 0xa1, 0x47, 0x22, 0x12, 0x2d, 0xcc, 0x43, 0xce, 0x3a, 0x14, 0xb8,
	0x53, 0xc0, 0x9d, 0x3f, 0x14, 0x68, 0x39, 0x78, 0x41, 0xd2, 0x8c, 0x7a, 0x6c, 0x28, 0xee, 0xc8,
	0x20, 0x74, 0xfe, 0xac, 0x40, 0x6b, 0x92, 0xcf, 0xd7, 0xc3, 0x7e, 0x87, 0x06, 0xbc, 0x34, 0xa0,
	0xf5, 0x77, 0x0c, 0xa8, 0xb6, 0x35, 0xa0, 0x9f, 0xc0, 0x61, 0x5a, 0xb2, 0x63, 0x33, 0xdd, 0x07,
	0x65, 0xd8, 0x0e, 0xd0, 0xe7, 0x70, 0xb4, 0x4d, 0xcc, 0x70, 0xb8, 0x99, 0x77, 0xb4, 0xc5, 0xce,
	0x70, 0x68, 0x07, 0x9d, 0xbf, 0x2a, 0xd0, 0x9c, 0xa5, 0xde, 0x02, 0x3b, 0xd8, 0x8f, 0x69, 0xf0,
	0x7f, 0x71, 0xfa, 0x96, 0x8a, 0xab, 0xb7, 0x56, 0xfc, 0x31, 0x1c, 0xe6, 0x4c, 0xbe, 0x4b, 0xb9,
	0xfe, 0x8d, 0xed, 0xed, 0x7c, 0x53, 0x95, 0x1d, 0xb0, 0x27, 0xf9, 0x87, 0xdc, 0x8b, 0x32, 0x92,
	0xad, 0xb8, 0xf1, 0xaa, 0xb3, 0x8e, 0xf7, 0xba, 0xa6, 0xed, 0x73, 0xed, 0xdf, 0x6e, 0x9a, 0xce,
	0x6f, 0x0a, 0x34, 0x06, 0xd2, 0x48, 0x74, 0x04, 0xb5, 0xb2, 0xc3, 0x22, 0x60, 0x6b, 0x25, 0x88,
	0xd9, 0x03, 0x2e, 0x1d, 0x95, 0xd1, 0x7f, 0xb2, 0x32, 0xc9, 0xe7, 0x4b, 0x92, 0x5e, 0x79, 0xf3,
	0x25, 0x76, 0xbf, 0xc7, 0xab, 0xc2, 0xca, 0x12, 0x7c, 0x81, 0x57, 0xe8, 0x03, 0x68, 0x51, 0xbe,
	0x4c, 0x30, 0xe5, 0x0b, 0x56, 0xf8, 0xd8, 0x2c, 0xb0, 0x19, 0x5d, 0x76, 0x7e, 0x51, 0x40, 0x1b,
	0x8b, 0x32, 0x77, 0x3c, 0x50, 0x76, 0x3d, 0x28, 0x2d, 0xd5, 0xca, 0xfe, 0xa5, 0xaa, 0xee, 0x2c,
	0xd5, 0x13, 0x80, 0x3c, 0x22, 0x99, 0x9b, 0x50, 0xe2, 0x63, 0xae, 0x53, 0x75, 0x74, 0x86, 0x8c,
	0x19, 0xc0, 0x24, 0x26, 0x39, 0xb3, 0x2f, 0xc5, 0x65, 0x89, 0x05, 0xc6, 0x24, 0xfe, 0x5a, 0x05,
	0x6d, 0x82, 0xe9, 0x35, 0xa3, 0xff, 0x83, 0xc4, 0x52, 0x9b, 0x2a, 0xfb, 0x5e, 0x08, 0xea, 0x7e,
	0xed, 0xd5, 0x1d, 0xed, 0x8f, 0xa1, 0xb9, 0xa0, 0x71, 0x9e, 0x48, 0xf1, 0x35, 0xb1, 0xd9, 0x39,
	0x24, 0xd4, 0x9f, 0x80, 0x88, 0xdc, 0x94, 0xbc, 0xc5, 0x72, 0x0a, 0x75, 0x8e, 0x4c, 0xc8, 0x5b,
	0x8c, 0x9e, 0x41, 0x83, 0x44, 0x19, 0xa6, 0xd7, 0x9e, 0x78, 0xb9, 0x95, 0x1b, 0x2c, 0x2b, 0x3a,
	0xb7, 0x25, 0xc1, 0x59, 0x53, 0xd1, 0x13, 0xa8, 0x86, 0x71, 0x80, 0xf9, 0x14, 0x1e, 0x3c, 0xbd,
	0x7f, 0xe3, 0xc8, 0x20, 0x0e, 0xb0, 0xc3, 0x29, 0xe8, 0x43, 0x68, 0xcb, 0x61, 0x9e, 0xe3, 0xd2,
	0x67, 0x4e, 0x6b, 0x0d, 0x32, 0x03, 0x5d, 0x68, 0x14, 0xff, 0x82, 0x8e, 0xc0, 0x98, 0x0d, 0x2f,
	0x86, 0xa3, 0xd7, 0x43, 0xd7, 0x1e, 0x4e, 0x2d, 0xe7, 0x55, 0xb7, 0x6f, 0xdc, 0x43, 0x3a, 0xd4,
	0x7a, 0x5d, 0xbb, 0x7f, 0x69, 0x28, 0x08, 0xa0, 0xfe, 0xda, 0xb2, 0x2e, 0xfa, 0x97, 0x46, 0x05,
	0x35, 0x41, 0x1b, 0x8c, 0x86, 0xd3, 0xaf, 0xfb, 0x97, 0x86, 0x8a, 0xda, 0xa0, 0x7f, 0x33, 0xeb,
	0x3a, 0x53, 0xcb, 0xe9, 0x5f, 0x1a, 0x55, 0xc6, 0xbb, 0xb4, 0xba, 0xec, 0x77, 0xad, 0xf3, 0xb3,
	0x02, 0x55, 0x26, 0x0a, 0x19, 0xd0, 0x2a, 0x6e, 0x1f, 0x8c, 0x7a, 0x96, 0x71, 0x8f, 0x21, 0x2f,
	0xed, 0x37, 0x56, 0xcf, 0xed, 0x0e, 0x46, 0xb3, 0xe1, 0xd4, 0x50, 0xd0, 0x7d, 0x78, 0x6f, 0x60,
	0x4d, 0x2d, 0xc7, 0xea, 0xb9, 0x93, 0xd9, 0xc0, 0x9d, 0x4d, 0xba, 0x5f, 0x59, 0x46, 0xa5, 0x0c,
	0x0f, 0xba, 0x6f, 0x24, 0xac, 0xa2, 0x63, 0x40, 0x05, 0xdc, 0xef, 0x4e, 0xa6, 0x12, 0xaf, 0xa2,
	0x47, 0xf0, 0xe0, 0x26, 0xee, 0x5a, 0xaf, 0x2c, 0xc7, 0xa8, 0x7d, 0xfa, 0x0c, 0x8c, 0xdd, 0xe7,
	0x87, 0xdd, 0x5f, 0x48, 0x1b, 0x3b, 0xa3, 0x17, 0xd6, 0x64, 0x32, 0x72, 0x8c, 0x7b, 0xac, 0x8c,
	0xc9, 0xd4, 0xb1, 0xc7, 0x96, 0xa1, 0x3c, 0xef, 0x81, 0xe9, 0xc7, 0xe1, 0xb9, 0xb7, 0xc4, 0xd9,
	0x15, 0x26, 0xde, 0x8f, 0x1e, 0xc5, 0x85, 0xf7, 0xcf, 0x5b, 0x2f, 0xc5, 0x8f, 0x31, 0xfb, 0x14,
	0xff, 0xf6, 0xe1, 0x16, 0xc7, 0x8f, 0xc3, 0xcf, 0x24, 0x6f, 0x11, 0xcf, 0xeb, 0xfc, 0x6b, 0xfd,
	0x8b, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xd5, 0x2c, 0x9a, 0xbe, 0x0b, 0x00, 0x00,
}
